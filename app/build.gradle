import java.text.SimpleDateFormat

apply plugin: 'com.android.application'

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    defaultConfig {
        applicationId "com.toddway.anyapp"
        minSdkVersion 19
        targetSdkVersion 21
        versionCode file("../scripts/git-commit-count.sh").toString().execute().text.trim().toInteger()
        versionName file("../scripts/git-describe.sh").toString().execute().text.trim()
        buildConfigField "String", "BUILD_TIME", "\"${buildTime()}\""
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // override the APK filename to include version info
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def apkPrefix = "anyapp-${defaultConfig.versionName}-c${defaultConfig.versionCode}"
            def originalApkFile = output.outputFile
            output.outputFile = file(apkPrefix + "-" + originalApkFile.name)
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:21.0.2'
}

def buildTime() {
    def df = new SimpleDateFormat("yyyy-MM-dd HH:mm z")
    return df.format(new Date())
}


def adb() {
    // Get location of adb
    Properties localProperties = new Properties()
    try {
        localProperties.load(project.rootProject.file('local.properties').newDataInputStream())
    }
    catch (ex) {
        throw new InvalidUserDataException("You should define the path to your Android SDK as a " +
                "property `sdk.dir` in local.properties on the project root."
        )
    }
    return localProperties.getProperty('sdk.dir') + '/platform-tools/adb'
}

task runDebug(dependsOn: 'installDebug') {
    description 'Runs the debug-flavour of the app on the connected device'
    doLast {
        exec{commandLine "${adb()}", "shell", "am", "start", "-n", "com.toddway.anyapp/.MainActivity"}
    }
}

task runRelease(dependsOn: 'installRelease') {
    description 'Runs the release-flavour of the app on the connected device'
    doLast {
        exec{commandLine "${adb()}", "shell", "am", "start", "-n", "com.toddway.anyapp/.MainActivity"}
    }
}