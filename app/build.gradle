buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
        classpath 'com.novoda:gradle-android-command-plugin:1.3.0'
        classpath 'com.jakewharton.sdkmanager:gradle-plugin:0.12.+'
    }
}

apply plugin: 'android-sdk-manager'
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'android-command'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:21.0.2'
    compile('com.crashlytics.sdk.android:crashlytics:2.2.0@aar') {
        transitive = true;
    }

}

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    defaultConfig {
        applicationId "com.toddway.anyapp"
        minSdkVersion 19
        targetSdkVersion 21
        versionCode "git rev-list HEAD --count".execute().text.trim().toInteger()
        versionName "git describe --dirty".execute().text.trim()
        buildConfigField "String", "BUILD_TIME", "\"${buildTime()}\""
    }

    signingConfigs {
        release {
            try {
                storeFile file("app.keystore")
                storePassword KEYSTORE_PASSWORD
                keyAlias "client"
                keyPassword KEY_PASSWORD
            }
            catch (ex) {
                throw new InvalidUserDataException("You should define KEYSTORE_PASSWORD and " +
                        "KEY_PASSWORD in gradle.properties."
                )
            }
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
        }
        beta {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles 'proguard-rules.pro'
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles 'proguard-rules.pro'
        }

    }

    // override the APK filename to include version info
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def apkPrefix = "build/anyapp-${defaultConfig.versionName}-${defaultConfig.versionCode}"
            def originalApkFile = output.outputFile
            output.outputFile = file(apkPrefix + "-" + originalApkFile.name)
        }
    }
}

import java.text.SimpleDateFormat
def buildTime() {
    def df = new SimpleDateFormat("yyyy-MM-dd HH:mm z")
    return df.format(new Date())
}